//  https://leetcode.com/problems/search-in-rotated-sorted-array/description/

Logic: Binary search (cuz sorted array)
TC: O(log N)
SC: O(1)

int search(vector<int>& nums, int target) {
        int low = 0, high=nums.size()-1, mid;

        while(low<=high)
        {
            mid = low + (high-low) /2;
            if(target == nums[mid])
                return mid;
            else
            {
                if(nums[low]<=nums[mid])
                {
                    if(target>=nums[low] && target<=nums[mid])
                        high = mid-1;
                    else
                        low  = mid+1;
                }
                else if(nums[low]>nums[mid]){
                    if(target<=nums[high] && target>=nums[mid])
                        low = mid+1;
                    else
                        high = mid-1;
                }
            }
        }

        return -1;
        
    }
